// generated by cppGen.go - do not edit
#include "Automata.h"

void NUM::runGreedy(CharReader& reader) {
    auto old = reader.curIdx();
    char32_t c;

s0:
    c = reader.nextChar();
    if (U'1' <= c && c <= U'9') {
        goto s1;
    }
    if (c == U'0') {
        goto s2;
    }
    goto bad;
s1:
    c = reader.nextChar();
    if (U'0' <= c && c <= U'9') {
        goto s3;
    }
    goto accept;
s3:
    c = reader.nextChar();
    if (U'0' <= c && c <= U'9') {
        goto s3;
    }
    goto accept;

bad:
    reader.setCurIdx(old);
    return;

s2:
	reader.nextChar();
accept:
	reader.setCurIdx(reader.curIdx() - 1);
    return;
}

std::string NUM::name() {
    return "NUM";
}

void IDENT::runGreedy(CharReader& reader) {
    auto old = reader.curIdx();
    char32_t c;

s0:
    c = reader.nextChar();
    if (c == U'_') {
        goto s3;
    }
    if (U'A' <= c && c <= U'Z') {
        goto s1;
    }
    if (U'a' <= c && c <= U'z') {
        goto s2;
    }
    goto bad;
s5:
    c = reader.nextChar();
    if (c == U'_') {
        goto s5;
    }
    if (U'A' <= c && c <= U'Z') {
        goto s7;
    }
    if (U'a' <= c && c <= U'z') {
        goto s4;
    }
    if (U'0' <= c && c <= U'9') {
        goto s6;
    }
    goto accept;
s6:
    c = reader.nextChar();
    if (U'A' <= c && c <= U'Z') {
        goto s7;
    }
    if (U'0' <= c && c <= U'9') {
        goto s6;
    }
    if (c == U'_') {
        goto s5;
    }
    if (U'a' <= c && c <= U'z') {
        goto s4;
    }
    goto accept;
s1:
    c = reader.nextChar();
    if (U'0' <= c && c <= U'9') {
        goto s6;
    }
    if (c == U'_') {
        goto s5;
    }
    if (U'a' <= c && c <= U'z') {
        goto s4;
    }
    if (U'A' <= c && c <= U'Z') {
        goto s7;
    }
    goto accept;
s3:
    c = reader.nextChar();
    if (U'A' <= c && c <= U'Z') {
        goto s7;
    }
    if (U'0' <= c && c <= U'9') {
        goto s6;
    }
    if (U'a' <= c && c <= U'z') {
        goto s4;
    }
    if (c == U'_') {
        goto s5;
    }
    goto accept;
s7:
    c = reader.nextChar();
    if (U'a' <= c && c <= U'z') {
        goto s4;
    }
    if (U'0' <= c && c <= U'9') {
        goto s6;
    }
    if (U'A' <= c && c <= U'Z') {
        goto s7;
    }
    if (c == U'_') {
        goto s5;
    }
    goto accept;
s4:
    c = reader.nextChar();
    if (c == U'_') {
        goto s5;
    }
    if (U'A' <= c && c <= U'Z') {
        goto s7;
    }
    if (U'0' <= c && c <= U'9') {
        goto s6;
    }
    if (U'a' <= c && c <= U'z') {
        goto s4;
    }
    goto accept;
s2:
    c = reader.nextChar();
    if (U'a' <= c && c <= U'z') {
        goto s4;
    }
    if (c == U'_') {
        goto s5;
    }
    if (U'A' <= c && c <= U'Z') {
        goto s7;
    }
    if (U'0' <= c && c <= U'9') {
        goto s6;
    }
    goto accept;

bad:
    reader.setCurIdx(old);
    return;

	reader.nextChar();
accept:
	reader.setCurIdx(reader.curIdx() - 1);
    return;
}

std::string IDENT::name() {
    return "IDENT";
}

void COMMENT::runGreedy(CharReader& reader) {
    auto old = reader.curIdx();
    char32_t c;

s0:
    c = reader.nextChar();
    if (c == U'/') {
        goto s1;
    }
    goto bad;
s2:
    c = reader.nextChar();
    if (0x1 <= c && c <= U')') {
        goto s4;
    }
    if (U'+' <= c && c <= 0x10ffff) {
        goto s3;
    }
    if (c == U'*') {
        goto s5;
    }
    goto bad;
s5:
    c = reader.nextChar();
    if (U'0' <= c && c <= 0x10ffff) {
        goto s8;
    }
    if (0x1 <= c && c <= U'.') {
        goto s7;
    }
    if (c == U'/') {
        goto s6;
    }
    goto bad;
s8:
    c = reader.nextChar();
    if (U'+' <= c && c <= 0x10ffff) {
        goto s3;
    }
    if (0x1 <= c && c <= U')') {
        goto s4;
    }
    if (c == U'*') {
        goto s5;
    }
    goto bad;
s3:
    c = reader.nextChar();
    if (U'+' <= c && c <= 0x10ffff) {
        goto s3;
    }
    if (0x1 <= c && c <= U')') {
        goto s4;
    }
    if (c == U'*') {
        goto s5;
    }
    goto bad;
s4:
    c = reader.nextChar();
    if (c == U'*') {
        goto s5;
    }
    if (U'+' <= c && c <= 0x10ffff) {
        goto s3;
    }
    if (0x1 <= c && c <= U')') {
        goto s4;
    }
    goto bad;
s7:
    c = reader.nextChar();
    if (c == U'*') {
        goto s5;
    }
    if (0x1 <= c && c <= U')') {
        goto s4;
    }
    if (U'+' <= c && c <= 0x10ffff) {
        goto s3;
    }
    goto bad;
s1:
    c = reader.nextChar();
    if (c == U'*') {
        goto s2;
    }
    goto bad;

bad:
    reader.setCurIdx(old);
    return;

s6:
	reader.nextChar();
accept:
	reader.setCurIdx(reader.curIdx() - 1);
    return;
}

std::string COMMENT::name() {
    return "COMMENT";
}
